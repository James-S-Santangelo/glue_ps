import os
import glob
import itertools
import pandas as pd
from snakemake.utils import min_version

min_version('7.25.0')

configfile: '../config/graham.yaml'
######################
#### INPUT FILES ####
#####################

# Samples and chromosomes as list
SAMPLES = pd.read_table(config['samples'])['sample'].tolist()
CITIES = pd.read_table(config['samples'])['city'].unique().tolist()
HABITATS = pd.read_table(config['samples'])['site'].unique().tolist()
CHROMOSOMES = pd.read_table(config['chromosomes'], header=None).iloc[:,0].tolist()
BAM_FILES_PATH = config['bams']

# Reference genome
REFERENCE_GENOME = config['ref']

######################
#### OUTPUT PATHS ####
######################

# Paths for output files
LOG_DIR = config['log_prefix']
REF_DIR = f"{config['results_prefix']}/ref"
PROGRAM_RESOURCE_DIR = f"{config['results_prefix']}/program_resources"
ANGSD_DIR = f"{config['results_prefix']}/angsd"
ANALYSIS_DIR = f"{config['results_prefix']}/analyses"

wildcard_constraints:
    chrom='|'.join([x for x in CHROMOSOMES]),
    sample='|'.join([x for x in SAMPLES]),
    habitat='urban|rural'

localrules: copy_ref,
    samtools_index_ref,
    create_bam_list_allSamples_allSites,
    create_bam_list_byHabitat_allSites,
    concat_habitat_bamLists_withinCities,
    concat_angsd_mafs_allSamples,
    angsd_byHabitat_allSites_done,
    create_bam_list_ohana_test

include: 'rules/common.smk'

rule all:
   input:
        f'{ANGSD_DIR}/angsd_byHabitat_allSites.done',
        f"{ANALYSIS_DIR}/picmin/picmin.done"

include: 'rules/ref.smk'
include: 'rules/angsd_byHabitat_allSites.smk'
include: 'rules/picmin.smk'
# include: 'rules/angsd_gls.smk'
